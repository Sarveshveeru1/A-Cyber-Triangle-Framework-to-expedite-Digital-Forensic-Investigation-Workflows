# analyzer/malware_scanner.py

import os
import hashlib
import json
from virustotal_python import Virustotal
from dotenv import load_dotenv

load_dotenv()

VIRUSTOTAL_API_KEY = os.getenv("VT_API_KEY")

def get_file_hash(file_path):
    hasher = hashlib.sha256()
    with open(file_path, "rb") as f:
        while chunk := f.read(4096):
            hasher.update(chunk)
    return hasher.hexdigest()

def scan_directory(directory="C:\\Users\\Public\\Downloads", extensions=[".exe", ".dll", ".bat", ".ps1"]):
    suspicious_files = []
    for root, _, files in os.walk(directory):
        for f in files:
            if any(f.lower().endswith(ext) for ext in extensions):
                suspicious_files.append(os.path.join(root, f))
    return suspicious_files

def check_with_virustotal(file_path, file_hash):
    vt = Virustotal(API_KEY=VIRUSTOTAL_API_KEY)

    try:
        # Try querying existing hash first
        resp = vt.request(f"files/{file_hash}")
        attributes = resp.data.get("attributes", {})
        stats = attributes.get("last_analysis_stats", {})
        return stats if stats else {"info": "No analysis stats available"}

    except Exception as e:
        if "404" in str(e):
            # File hash not found — upload file to VT
            try:
                with open(file_path, "rb") as f:
                    upload_resp = vt.request("files", files={"file": (os.path.basename(file_path), f)})
                    scan_id = upload_resp.data.get("id", "unknown")
                    return {"info": "File uploaded to VirusTotal", "scan_id": scan_id}
            except Exception as upload_error:
                return {"error": f"Upload failed: {str(upload_error)}"}
        else:
            return {"error": str(e)}

def run_virus_scan(scan_dir="C:\\Users\\Public\\Downloads", save_to="output/virus_scan_report.json"):
    files = scan_directory(scan_dir)
    results = []

    for path in files:
        file_hash = get_file_hash(path)
        vt_result = check_with_virustotal(path, file_hash)
        results.append({
            "file": path,
            "sha256": file_hash,
            "virustotal": vt_result
        })

    os.makedirs(os.path.dirname(save_to), exist_ok=True)
    with open(save_to, "w") as f:
        json.dump(results, f, indent=4)

    print(f"✅ VirusTotal scan complete. Results saved to {save_to}")
    return save_to
